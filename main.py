# main.py (修改后)

from config import llm_config
from outline_module import generate_refined_outline # 只导入主函数
from book_module import BookGenerator
from utils import save_content, load_content, OUTPUT_DIR # 导入 OUTPUT_DIR
import json
import os

# --- 配置区 ---
NUM_CHAPTERS = 20
INITIAL_PROMPT = """
# 核心创作指令：小说《规则回廊：我在诡异世界无限闯关》

## 1. 项目目标与规格

* **小说名称:** 《规则回廊：我在诡异世界无限闯关》
* **目标篇幅:** **25 章** (请严格按照此章节数规划和创作)
* **章节长度:** 每章约 **4000 字** (硬性要求，请通过场景规划和内容生成确保)
* **目标平台与读者:** 番茄小说，18-35 岁读者
* **核心类型:** 无限流 × 悬疑推理 × 生存闯关
* **整体风格:** **既要**情节烧脑、逻辑性强、节奏紧凑、氛围诡异、紧张刺激、充满心理博弈；**也要**确保核心设定清晰易懂，关键情节**易于读者理解**，避免过度晦涩。

## 2. 故事核心设定

* **故事简介:** 主角被困于名为“规则回廊”的诡异空间。此空间无限循环，且**每一天**（或每一轮闯关周期）生存规则都会**随机改变**。规则本身诡异、多样且极度危险。主角必须依靠超凡的智慧和推理能力，在极短时间内**破解当日规则的本质、寻找其漏洞并加以利用**，才能在死亡线上挣扎求生，并逐步在绝望中寻找线索，揭开“规则回廊”背后令人战栗的真相与巨大阴谋。
* **故事年代:** 故事发生在2025年，请再故事创作时避免创作很难被读者理解、过于先进的概念，如量子等。禁止出现代码能相关内容。
* **核心概念：“规则回廊”** (需要 **World Builder** 详细设计)
    * **空间特征:** 回廊的具体形态？是无限延伸的走廊？变化的建筑群？还是更抽象的维度空间？其物理/非物理特性如何？
    * **规则变化机制:** 规则由谁制定？如何更新（例如：每天零点刷新）？变化的范围和倾向性？是完全随机，还是有某种模式或被操控？规则的来源是什么？
    * **规则特点:** 必须诡异且多样化。例如，可能涉及物理定律的扭曲、逻辑悖论、感官欺骗、强制执行的奇怪行为准则、甚至改写现实的规则等。危险性如何体现？违反规则的直接后果是什么？
    * **规则漏洞:** 漏洞是规则设计缺陷，还是有意为之？如何发现（通过观察、推理、试错、信息碎片）？利用漏洞需要付出什么代价或满足什么条件？
    * **回廊本质与目的:** 回廊是实验场、监狱、筛选机制还是其他？幕后操纵者/势力（可能是人、AI、或其他存在）构建回廊的最终目的是什么？回廊的起源故事？
    * **重要设定呈现要求:** 回廊的关键设定（如规则运作、空间特性）在引入时，需要通过**具体事件、角色体验或简洁对话**来展现，**避免**大段的、抽象的理论阐述。要让读者能快速理解基本运作方式。

## 3. 主要人物设定要求 (需要 **Character Creator** 详细设计)

* **主角:**
    * 请设定姓名、年龄、性别、外貌特征。
    * **核心特质:** 极高的智商和超强的逻辑推理、观察分析能力。性格可以设定为冷静、偏执、甚至略带反社会倾向，但必须有强烈的求生欲和解密欲。
    * **背景故事:** 他/她是如何进入“规则回廊”的？在进入之前是做什么的？是否有过往经历或特殊知识能帮助他在回廊中生存？
    * **特殊能力 (可选但推荐):** 除了基础的超高智力，是否赋予他/她一项独特的、非直接战斗类的辅助能力？（例如：绝对记忆、微表情解读、对特定类型规则的直觉、某种形式的“存档读档”能力雏形等，注意平衡性）。
* **核心配角 (3-5 人):**
    * 需设定姓名、身份（如何进入回廊的）、鲜明的性格、特长（可能与主角互补或冲突）。
    * 明确他们与主角的关系（可靠盟友、潜在竞争者、亦敌亦友的利用关系、必须提防的背叛者等）。
    * 每个配角都需要有自己的**秘密和动机**，他们的行动逻辑要清晰可信，避免脸谱化。他们的存在要能推动情节或反衬主角。
* **敌对势力/反派:**
    * 明确回廊背后的操纵者是个人、组织、AI 还是其他形式的存在？其**具体目的**是什么？
    * 设定其组织结构、代表人物（如果能在回廊中直接或间接出现）、能力和行事风格。他们与规则的制定和漏洞有何关系？

## 4. 情节与结构要求 (需要 **Story Planner** 和 **Outline Creator/Editor** 重点把握)

* **黄金开局 (前三章):**
    * **第一章:** 开篇即高能（如前 300 字内遭遇规则危机），**清晰展示**当日规则及其危险性，快速塑造主角面临的**困境**并展现其**核心能力**（如观察力/推理），结尾留强悬念。**禁止开篇过于抽象或信息模糊。**
    * **前三章内:** 必须让读者对主角、核心设定（回廊、规则变化）、主要冲突（生存压力、与其他角色的初步互动）建立**清晰的基础认知**，并留下追更钩子。
* **节奏与转折 (适应 25 章):**
    * 整体节奏快，但**快中有序**。关键信息和设定需要有**适当的呈现时机和方式**，避免信息过载。悬念密集，转折合理。
    * 在 25 章内合理设置中期转折/高潮（如第 5-8 章，15-18 章）和最终高潮。
* **规则与破解:**
    * 规则设定要新颖、诡异，但其**基础运作方式需要对读者清晰或可推测**。
    * 破解过程要体现智力博弈，逻辑清晰，可以有反转，但**最终的破解方法要让读者能够理解**（即使是通过主角的解释）。
* **悬念驱动:** 每章结尾钩子要**明确**。

## 5. 写作风格与叙述要求 (需要 **Writer** 和 **Editor** 重点执行)

* **文风基调:** 保持悬疑诡异、紧张烧脑的氛围。
* **叙述:** **力求清晰易懂**。在描写抽象或复杂的概念/场景时，多运用**具体的感官描写、生动的比喻、或角色行为反应**来辅助读者理解，**避免过度使用生僻术语或仅仅罗列意象**。节奏快，但重要信息点要给读者留下理解时间。目标是让故事既有深度和智力挑战，又能被广大网文读者顺畅阅读和理解，找到“烧脑”与“易懂”的最佳平衡点。
* **人物:** 内心描写和对话要**真实可信**，充分展现人物性格和动机，让读者产生代入感和共情。
* **规则呈现:** 清晰地告知读者当前生效的规则是什么，但保留其运作机制和漏洞作为悬念。
* **视觉化潜力:** 描写时注意画面感，便于读者想象，也为后续可能的短剧、漫画、影视改编打下基础。

## 6. 总体目标

创作一本符合番茄小说平台调性、**既烧脑刺激又清晰易懂**、能吸引并留住读者的、高质量的无限流悬疑推理网文。要做到节奏快、悬念强、逻辑自洽、主角智商在线、配角形象鲜明、规则设计有新意，并具有一定的市场潜力。

## 7. 额外强调与创作指引 (请严格执行)

### 一、减少 AI 创作痕迹，提升自然度与真实感：
-   语言表达、角色互动、情节发展必须力求自然流畅，**坚决避免**机械重复、公式化叙述和过度华丽但空洞的辞藻。
-   人物行为、对话及心理状态需高度符合真实的人类心理逻辑和常识。**增加可信的细节描写。**

### 二、前三章强化指令 (黄金开局)：
- **第一章:** 必须做到开篇即高能，建议在前 300 字内就让读者直接感受到紧张危机的诡异规则环境，并快速展示主角的核心特质（尤其是推理/适应能力）。
- **前三章内:** 必须完成核心悬念的铺设、主要冲突的建立，并留下极强烈的追读钩子或爆点，确保读者在前三章就被牢牢吸引。

### 三、参考规则实例 (供世界构建与情节设计灵感启发)：
- 例如：“空间每隔 30 分钟重力方向随机变换，如未及时适应则被空间挤压致死”；
- 例如：“禁止说出任何表示颜色的词汇，违者立即出现严重幻觉并逐渐失去理智”；
- 例如：“所有人每小时记忆会被强制随机清除一分钟的内容，只有特定条件（或主角的特殊能力）能保留或找回线索”。
- （请 World Builder 和 Outline/Scene Planner 在设计具体规则时参考此类风格，力求新颖、诡异、且具有可破解性）
-  **（重要提示：无论规则多诡异，其运作方式和主角的应对策略都需要让读者最终能够理解其逻辑。）**

### 四、参考角色关系模式 (供角色创建与情节设计参考)：
- 可以设计：忠诚但存在隐藏秘密的盟友；表面合作却充满竞争或互相算计的伙伴；疑心重、时刻计划背叛的临时队友；敌我立场模糊、因共同利益或威胁而暂时合作的复杂角色等。目的是增加人物互动张力和不可预测性。

**请各位 Agent 严格按照以上要求，并结合我们之前讨论优化的协作流程和各自的 Prompt 指令，开始创作！**
"""

# INITIAL_PROMPT = """
# 请创作一个故事，核心元素如下：
# 故事背景设定在近未来的上海，一家名为“幻境科技”的VR游戏公司内部。
# 主角是一位名叫林潇的年轻女程序员，她非常有才华但性格内向，不善交际。她独立开发了一款具有革命性情感交互系统的VR游戏demo。
# 主要冲突：公司内部的技术总监（李峰，一个野心勃勃的中年男人）想要窃取她的成果据为己有，而另一位资深但正直的游戏策划师（陈忶，女性，林潇的潜在导师）则发现了李峰的企图，试图帮助林潇。
# 故事线：林潇在秘密完善demo -> 李峰开始打压并试图获取代码 -> 陈忶介入调查与帮助 -> 在公司年度发布会前的高潮对决 -> 林潇最终保护了自己的成果并获得认可（或选择离开创业）。
# 风格：现代都市职场、科技惊悚、略带成长的励志元素。视角主要跟随林潇。
# """

# --- 主流程 ---
def run_generation():
    print("--- AutoGen Book Generator (循环精炼版) ---")

    # --- 阶段 1 & 2 合并: 大纲、角色、设定等的生成与精炼 ---
    # 这个函数现在包含了完整的迭代循环
    final_outline_structure, final_character_profiles, final_world_details, final_story_plan = \
        generate_refined_outline(
            initial_prompt=INITIAL_PROMPT,
            num_chapters=NUM_CHAPTERS
        )

    # 检查 generate_refined_outline 的结果
    if final_outline_structure is None:
        print("错误：未能生成或批准最终大纲结构，流程终止。")
        print(f"请检查 '{OUTPUT_DIR}/' 目录下的 iteration_*.txt 文件了解详情。")
        # 即使大纲结构解析失败，后续步骤可能仍需要文本文件
        if not final_character_profiles:
             print("角色档案也缺失，无法继续。")
             return
        else:
             print("警告：大纲结构解析失败，但将尝试使用最终文本文件继续生成章节。")
             # 尝试从文件加载文本大纲
             final_outline_text = load_content("final_outline.txt") or load_content("final_unapproved_outline.txt")
             if not final_outline_text:
                  print("错误：无法加载任何最终大纲文本文件，流程终止。")
                  return
             # 尝试在 book_module 中重新解析
             # 注意: _parse_outline 需要可访问，或者将解析逻辑移到 book_module
             from outline_module import _parse_outline
             final_outline_structure = _parse_outline(final_outline_text, NUM_CHAPTERS)
             if not final_outline_structure:
                 print("错误：无法从最终文本文件解析大纲，流程终止。")
                 return

    # 确保其他必要信息也加载了 (generate_refined_outline 应该已保存最终版本)
    if not final_character_profiles:
        final_character_profiles = load_content("final_character_profiles.txt") or \
                                   load_content("final_unapproved_character_profiles.txt")
        if not final_character_profiles:
             print("错误：无法加载角色档案，无法继续。")
             return

    if not final_world_details:
        final_world_details = load_content("final_world_details.txt") or \
                              load_content("final_unapproved_world_details.txt")
        if not final_world_details:
             print("警告：无法加载世界设定。")
             final_world_details = "" # 使用空文本继续

    print("\n--- 大纲精炼完成（或达到最大迭代次数） ---")
    print(f"最终使用的角色档案文件: {'已加载' if final_character_profiles else '未找到'}")
    print(f"最终使用的世界设定文件: {'已加载' if final_world_details else '未找到'}")
    print(f"最终使用的大纲结构: {'已生成' if final_outline_structure else '解析失败'}")

    # 保存最终结构化大纲为 JSON (如果成功解析)
    if final_outline_structure:
        try:
            save_content("final_outline_structure.json", json.dumps(final_outline_structure, ensure_ascii=False, indent=4))
        except Exception as e:
            print(f"保存最终结构化大纲 JSON 时出错: {e}")


    # --- 阶段 3: 书籍章节生成 ---
    # 初始化书籍生成器
    book_generator = BookGenerator(
        final_outline=final_outline_structure,
        character_profiles=final_character_profiles,
        world_details=final_world_details
    )

    # 开始生成章节
    book_generator.generate_book()

    print("\n--- 全部流程结束 ---")

if __name__ == "__main__":
    run_generation()